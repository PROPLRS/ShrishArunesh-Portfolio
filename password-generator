import random
import string
import pyperclip


def generate_password(length=12, use_upper=True, use_lower=True, use_digits=True, use_symbols=True):
    """
    Generates a secure password based on user preferences.
    """
    if length < 4:
        print("Password length should be at least 4 characters for security.")
        return None

    character_pool = ""
    if use_upper:
        character_pool += string.ascii_uppercase
    if use_lower:
        character_pool += string.ascii_lowercase
    if use_digits:
        character_pool += string.digits
    if use_symbols:
        character_pool += string.punctuation

    if not character_pool:
        print("Error: No character types selected!")
        return None

    password = "".join(random.choice(character_pool) for _ in range(length))
    return password


if __name__ == "__main__":
    print("Secure Password Generator")
    try:
        length = int(input("Enter password length (minimum 4): "))
        use_upper = input("Include uppercase letters? (yes/no): ").strip().lower() == "yes"
        use_lower = input("Include lowercase letters? (yes/no): ").strip().lower() == "yes"
        use_digits = input("Include numbers? (yes/no): ").strip().lower() == "yes"
        use_symbols = input("Include symbols? (yes/no): ").strip().lower() == "yes"

        password = generate_password(length, use_upper, use_lower, use_digits, use_symbols)

        if password:
            print(f"Generated Password: {password}")
            pyperclip.copy(password)
            print("(Password copied to clipboard)")
    except ValueError:
        print("Invalid input! Please enter a valid number for password length.")

# About the Developer:
# I created this script to simplify secure password generation which coopies the password to clipboard automatically, ensuring strong protection
# for user accounts. This project enhances my skills in Python automation, user input handling,
# and randomization techniques.
